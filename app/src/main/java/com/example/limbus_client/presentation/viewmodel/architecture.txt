com.limbusapp.frontend
├── data                                # Capa de Datos
│   ├── model                         # Modelos de datos (DTOs para red, entidades de BD local)
│   │   ├── remote                    # DTOs (Data Transfer Objects) para Ktor Client
│   │   └── local                     # Entidades para la base de datos local (Room) [cite: 494]
│   ├── datasource                    # Fuentes de Datos
│   │   ├── remote                    # Implementaciones de Ktor Client (Servicios API) [cite: 493]
│   │   │   └── service               # Interfaces de los servicios Ktor
│   │   │   └── impl                  # Implementaciones de los servicios Ktor
│   │   └── local                     # Acceso a datos locales (DAOs de Room) [cite: 494]
│   └── repository                    # Repositorios: Abstraen el origen de los datos
│       └── impl                      # Implementaciones de los repositorios
│
├── domain                              # Capa de Dominio (Lógica de Negocio)
│   ├── model                         # Modelos de dominio (objetos de negocio puros)
│   ├── repository                    # Interfaces de los Repositorios (definidas aquí, implementadas en 'data')
│   └── usecase                       # Casos de Uso (lógica específica para cada acción/feature)
│
├── presentation                        # Capa de Presentación (UI)
│   ├── ui                            # Componentes de UI con Jetpack Compose [cite: 483, 489]
│   │   ├── theme                     # Tema de la aplicación (colores, tipografía) [cite: 490]
│   │   ├── component                 # Componentes reutilizables de Jetpack Compose
│   │   └── feature                   # Pantallas o features específicas (agrupadas por módulo/épica)
│   │       ├── auth
│   │       ├── nutritional_evaluation  # Basado en Épica 1 [cite: 394]
│   │       ├── meal_planning           # Basado en Épica 2 [cite: 396]
│   │       ├── notifications_education # Basado en Épica 3
│   │       ├── user_profile            # Basado en Épica 4 [cite: 401]
│   │       └── health_professional_integration # Basado en Épica 5 [cite: 404]
│   ├── navigation                    # Lógica de navegación (Jetpack Navigation Compose)
│   └── viewmodel                     # ViewModels (gestionan el estado de la UI y se comunican con los casos de uso) [cite: 491]
│
├── di                                  # Inyección de Dependencias (Ej: Hilt) [cite: 496]
│   └── module                        # Módulos de Hilt
│
├── core                                # Módulo Core/Común (Opcional, para código compartido)
│   ├── util                          # Clases de utilidad, extensiones, constantes
│   ├── base                          # Clases base (ej: BaseViewModel, BaseUseCase)
│   └── network                       # Configuración base de Ktor Client (si es compartida)
│
└── App.kt                              # Clase principal de la aplicación (si aplica)